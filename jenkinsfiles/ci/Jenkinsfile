node{

  git branch: "master", url: "https://github.com/thihuynhdotexe/jenkins-pipeline-example" 

  stage('Unit Tests') {
    withEnv(["JAVA_HOME=${ tool "java-11" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
        sh "mvn test"
    }
  }

  stage ('OWASP Dependency-Check') {
    withEnv(["JAVA_HOME=${ tool "java-11" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
        sh "mvn dependency-check:check"  
    }
    dependencyCheckPublisher pattern: "target/dependency-check-report.xml"
  }

  stage ('Sonarqube') {
    withEnv(["JAVA_HOME=${ tool "java-11" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
        sh "mvn sonar:sonar -Dsonar.host.url=http://sonar:9000"
    }
  }

  stage ('Build Jar') {
    withEnv(["JAVA_HOME=${ tool "java-11" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
        sh "mvn clean package -Dmaven.test.skip=true"
    }
  }

  stage ('Build and Deploy DSV image') {
    sh "docker build -t localhost:5000/jenkins-pipeline-example:dsv ."
    sh "docker push localhost:5000/jenkins-pipeline-example:dsv"
  }

  stage ('Deploy app in DSV') {
    sh "docker rm -f app-dsv &>/dev/null && sleep 10 && docker run --name=app-dsv -p 8081:8081 --net jenkins-pipeline-example_default -e SPRING_PROFILES_ACTIVE=dsv -d localhost:5000/jenkins-pipeline-example:dsv"
    sh "sheep 60"
  }

  stage ('OWASP ZAP') {
    withEnv(["JAVA_HOME=${ tool "java-11" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
        sh "mvn br.com.softplan.security.zap:zap-maven-plugin:analyze -DsaveSession=flalse -DshutdownZAP=false -DzapProxyHost=zaproxy -DzapProxyPort=8091 -DtargetURL=http://192.168.1.10:8081/"
    }
    publishHTML([
      allowMissing: false,
      alwaysLinkToLastBuild: false,
      keepAll: false,
      reportDir: 'target/zap-reports',
      reportFiles: 'zapReport.html',
      reportName: 'ZAP Report',
      reportTitles: ''])

    publishHTML([
      allowMissing: false,
      alwaysLinkToLastBuild: false,
      keepAll: false,
      reportDir: 'target/zap-reports',
      reportFiles: 'zapSpiderResults.html',
      reportName: 'ZAP Spider Report',
      reportTitles: ''])
  }
  
}
